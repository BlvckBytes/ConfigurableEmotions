# _________            ____________                             ______ ______    __________                _____
# __  ____/_______________  __/__(_)______ ____  ______________ ___  /____  /_______  ____/______ ___________  /_____________
# _  /    _  __ \_  __ \_  /_ __  /__  __ `/  / / /_  ___/  __ `/_  __ \_  /_  _ \_  __/  __  __ `__ \  __ \  __/  _ \_  ___/
# / /___  / /_/ /  / / /  __/ _  / _  /_/ // /_/ /_  /   / /_/ /_  /_/ /  / /  __/  /___  _  / / / / / /_/ / /_ /  __/(__  )
# \____/  \____//_/ /_//_/    /_/  _\__, / \__,_/ /_/    \__,_/ /_.___//_/  \___//_____/  /_/ /_/ /_/\____/\__/ \___//____/
# /____/
#
# ConfigurableEmotions - Developed by BlvckBytes <blvckbytes@gmail.com>
# Repository - https://github.com/BlvckBytes/ConfigurableEmotions
# ASCII-Art - https://patorjk.com/software/taag/#p=display&f=Speed

commands:
  emotion:
    name: 'emotion'
    allSentinel: 'Alle'
    paginationSize: 5
    aliases:
      - emo
      - emotions
  emotionReload:
    name: 'emotionrl'

discord:
  essentialsDiscord:
    enabled: true
    messageType: 'chat'
    allowGroupMentions: false

playerMessages:
  commandEmotionReloadSuccess$: 'lut["prefix"] & "&7Die Konfiguration des Plugins wurde &aerfolgreich neu geladen&7!"'
  commandEmotionReloadFailure$: 'lut["prefix"] & "&cWährend des Neuladeprozesses der Konfiguration trat ein Fehler auf; bitte überprüfe die Konsole!"'
  # - label: String
  # - all_sentinel: String
  # - emotions: List<HelpScreenEntry> where HelpScreenEntry: { identifier: String, description: String, aliases: List<String>, supports_others: Boolean, supports_all: Boolean }
  # - current_page: Integer
  # - page_size: Integer
  # - number_of_pages: Integer
  commandEmotionHelpScreen$: |
    flatten(
      "&8&m                       &8[&5Emotionen&8]&8&m                       ",
      "&7Seite &d" & current_page & "&7/&d" & number_of_pages & " &7- Nutze /" & label & " <Seite>",
      " ",
      flatten(map(
        emotions,
        (emotion) => list(
          "&8> &7/" & label & " &d" & emotion.identifier & "&7" & (
            if emotion.supports_others then (
              if emotion.supports_all then (
                if emotion.supports_self then " [&dSpieler&7/&d" & all_sentinel & "&7]" else " <&dSpieler&7/&d" & all_sentinel & "&7>"
              ) else (
                if emotion.supports_self then " [&dSpieler&7]" else " <&dSpieler&7>"
              )
            ) else ""
          ) & " - " & emotion.description,
          "&8> &7Aliase: " & iter_cat(emotion.aliases, (alias) => "&d" & alias, "&7, ", "&cKeine Aliase verfügbar"),
          " "
        ),
        "&cNoch keine Emotionen konfiguriert"
      )),
      "&8&m                       &8[&5Emotionen&8]&8&m                       "
    )
  receiverCannotBeSelf$: 'lut["prefix"] & "&cDu kannst dir selbst keine Emotion senden!"'
  # - target_player: String
  receivingPlayerNotOnline$: 'lut["prefix"] & "&cDer Spieler &4" & target_player & " &cbefindet sich nicht auf dem Server!"'
  # - target_player: String
  receivingPlayerDuplicate$: 'lut["prefix"] & "&cDer Spieler &4" & target_player & " &ckommt in der Empfängerliste mehrfach vor!"'
  # - emotion_identifier: String
  # - maximum_count: Integer
  maximumNumberOfTargetsExceeded$: 'lut["prefix"] & "&cDie Emotion &4" & emotion_identifier & " &cunterstützt maximal &4" & maximum_count & " Empfänger&c!"'
  # - all_sentinel: String
  cannotCombineAllSentinelWithNames$: 'lut["prefix"] & "&cDer &4" & all_sentinel & "-Platzhalter &ckann nicht mit Spielernamen kombiniert werden!"'
  # - emotion_identifier: String
  noReceivingPlayersOnline$: 'lut["prefix"] & "&cEs befindet sich kein Spieler auf dem Server, der deine Emotion &4" & emotion_identifier & " &cempfangen könnte!"'
  # - emotion_identifier: String
  unsupportedPlayingOnSelf$: 'lut["prefix"] & "&cDie Emotion &4" & emotion_identifier & " &ckann nicht auf dir selbst ausgeführt werden!"'
  # - emotion_identifier: String
  unsupportedOtherTarget$: 'lut["prefix"] & "&cDie Emotion &4" & emotion_identifier & " &cunterstützt das Versenden an andere Spieler nicht!"'
  # - emotion_identifier: String
  unsupportedAllTarget$: 'lut["prefix"] & "&cDie Emotion &4" & emotion_identifier & " &cunterstützt das Versenden an alle Spieler nicht!"'
  # - emotion_identifier: String
  # - remaining_time: String
  awaitRemainingCooldown$: 'lut["prefix"] & "&cBitte warte &4" & remaining_time & "&c, bevor du die Emotion &4" & emotion_identifier & " &cerneut ausführst!"'
  # - emotion_identifier: String
  missingEmotionPermission$: 'lut["prefix"] & "&cDir fehlt das Recht, die Emotion &4" & emotion_identifier & " &causzuführen!"'
  noAccessToAnyEmotion$: 'lut["prefix"] & "&cEs besteht kein Zugriff auf mindestens eine der existierenden Emotionen!"'
  # - input: String
  unknownEmotionProvided$: 'lut["prefix"] & "&cDie Emotion &4" & input & " &cexistiert nicht!"'
  playerOnlyCommand$: 'lut["prefix"] & "&cDieser Befehl ist nur Spielern zugänglich!"'
  missingPermissionEmotionCommand$: 'lut["prefix"] & "&cDir fehlen die nötigen Rechte um diesen Befehl zu benutzen!"'
  missingPermissionEmotionReloadCommand$: 'lut["prefix"] & "&cDir fehlen die nötigen Rechte um diesen Befehl zu benutzen!"'

# Environment for all emotion-messages:
# - receiver_name: String
# - receiver_display_name: String
# - sender_name: String
# - sender_display_name: String
emotions:

# File-global lookup table
lut:
  prefix: '&8[&5Emotionen&8] '
